definitions:
  dto.UserDto:
    properties:
      family:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
    required:
    - family
    - name
    - password
    - phone
    type: object
  dto.UserLoginDto:
    properties:
      password:
        type: string
      phone:
        type: string
    required:
    - password
    - phone
    type: object
info:
  contact: {}
paths:
  /api/v1/app/article/{id}:
    get:
      consumes:
      - application/json
      description: Get Article by ID
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Get Article by ID
      tags:
      - article
  /api/v1/app/article/list-articles:
    get:
      consumes:
      - application/json
      description: Get Articles
      parameters:
      - description: take
        in: query
        name: take
        required: true
        type: integer
      - description: skip
        in: query
        name: skip
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get Articles
      tags:
      - article
  /api/v1/app/article/list-user-articles/{user_id}:
    get:
      consumes:
      - application/json
      description: Get User Articles
      parameters:
      - description: user_id
        in: path
        name: user_id
        required: true
        type: integer
      - description: take
        in: query
        name: take
        required: true
        type: integer
      - description: skip
        in: query
        name: skip
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get User Articles
      tags:
      - article
  /create:
    post:
      consumes:
      - application/json
      description: Create a new user
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Create a new user
      tags:
      - user
  /login:
    post:
      parameters:
      - description: Login Data
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.UserLoginDto'
      responses:
        "200":
          description: ok
          schema:
            type: string
  /signup:
    post:
      parameters:
      - description: User Data
        in: body
        name: signup
        required: true
        schema:
          $ref: '#/definitions/dto.UserDto'
      responses:
        "200":
          description: ok
          schema:
            type: string
swagger: "2.0"
